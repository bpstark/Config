set laststatus=2
set nocompatible
let g:ycm_global_ycm_extra_conf = '~/.vim/ycm_extra_conf.py'
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-m>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:jedi#force_py_version=3

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

"let g:UltiSnipsSnippetDirectories=["/Users/bpstark/.vim/UltiSnips"]
let g:syntastic_cpp_compiler_options = ' -std=c++11'
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers = ['pylint']
let g:syntastic_python_python_exec = 'python3' 
let g:pathogen_disabled = []
"call add(g:pathogen_disabled, 'YouCompleteMe')
execute pathogen#infect()


set background=dark
colorscheme gruvbox
"colorscheme jellybeans
filetype plugin indent on
syntax on
set autoindent
set tabstop=4
set sw=4
set softtabstop=4
set expandtab
set hlsearch
set smartindent
set number
set incsearch
set autochdir
set hidden
set grepprg=grep\ -nH\ $*
au BufNewFile,BufRead *.tex set wrap
au BufNewFile,BufRead *.tex set linebreak
autocmd BufEnter * lcd %:p:h

iabbrev fo of
iabbrev fro for
iabbrev teh the

cabbrev maek make
cabbrev meka make
"for latex overides see and edit /Users/bstark/.vim/ftplugin/tex_latexSuite.vim"

"let &colorcolumn="80,".join(range(120,999),",")
let &colorcolumn="120"

autocmd VimEnter * :TagbarOpen
"autocmd FileType * :call tagbar#autoopen(0)

"allow repo specific vimrc files
let g:localvimrc_sandbox=0
let g:localvimrc_ask=0
"let g:localvimrc_whitelist=['/mnt/c/Users/brstark/workspace/[^/]\+/src/[^/]\+']

let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "passive_filetypes": ["java"] }


function! LoadCscope()
  let db = findfile("cscope.out", ".;")
  if (!empty(db))
    let path = strpart(db, 0, match(db, "/cscope.out$"))
    set nocscopeverbose " suppress 'duplicate connection' error
    exe "cs add " . db . " " . path
    set cscopeverbose
  " else add the database pointed to by environment variable 
  elseif $CSCOPE_DB != "" 
    cs add $CSCOPE_DB
  else
      echo "no db"
  endif
endfunction
au BufEnter /* call LoadCscope()
"
