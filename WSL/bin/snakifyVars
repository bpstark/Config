#! /usr/bin/env python3
import argparse
import os
import re


_underscorer1 = re.compile(r'(.)([A-Z][a-z]+)')
_underscorer2 = re.compile('([a-z0-9])([A-Z])')
_camel_var = re.compile(r'\b[a-jl-z][a-z]*([A-Z][a-z]+)+\b')

def camelToSnake(s):
    subbed = _underscorer1.sub(r'\1_\2', s)
    return _underscorer2.sub(r'\1_\2', subbed).lower()

def replace(line):
    for m in _camel_var.finditer(line):
        orig = m.group(0)
        snaked = camelToSnake(orig)
        #print("{} -> {}".format(orig, snaked))
        line = line.replace(orig, snaked)
    return line

def snakify(fname):
    with open(fname, 'r') as f:
        lines = f.readlines()
    updated_lines = map(replace, lines)
    with open(fname, 'w') as f:
        for line in updated_lines:
            f.write(line)

def main(args):
    for fname in args.files:
        if os.path.isfile(fname):
            snakify(fname)
    

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='convert snake case vars to camel case')
    parser.add_argument('files', type=str, nargs='+', help='Files to convert vars from snake to camel case.')
    
    args = parser.parse_args()
    main(args)
