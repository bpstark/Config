#! /usr/bin/env python3
#pylint:disable=invalid-name
'''Generate a k8 secrets yaml'''
import argparse
import base64
from os import path as osp

import yaml

def genNew(output):
    '''Handle case for new file'''
    name = osp.basename(output)
    try:
        name = osp.splitext(name)[0]
    except Exception:#pylint: disable=broad-except
        pass

    template = {
        'apiVersion' : 'v1',
        'kind': 'Secret',
        'metadata': {
            'name': name
        },
        'type': 'Opaque',
        'data': {}
    }
    while True:
        key = str(input('key: ')).strip()
        if not key:
            break
        value = str(input('value: ')).strip()
        value = base64.b64encode(value.encode('UTF-8')).decode('UTF-8')
        template['data'][key] = value
    with open(output, 'w') as fout:
        fout.write(yaml.dump(template))

def genExisting(output):
    '''Handle case for existing file'''
    print('return empty string to base64 encode current value, '
          'or type "keep" to keep value exactly as is')
    with open(output, 'r') as fin:
        data = yaml.load(fin.read(), Loader=yaml.FullLoader)
    for key in data['data']:
        prompt = '{}: '.format(key)
        if data['data'][key]:
            prompt = '{} (current="{}"): '.format(key, data['data'][key])
        value = str(input(prompt)).strip()
        if value == 'keep':
            continue
        if not value:
            value = data['data'][key]
        value = base64.b64encode(value.encode('UTF-8')).decode('UTF-8')
        data['data'][key] = value
    with open(output, 'w') as fout:
        fout.write(yaml.dump(data))


def main(args):
    '''Main function'''
    if osp.isfile(args.output):
        genExisting(args.output)
    else:
        genNew(args.output)

#pylint: disable=invalid-name
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generate a k8 secrets yaml')
    parser.add_argument('output', type=str, help='The file to save to')

    arguments = parser.parse_args()
    main(arguments)
